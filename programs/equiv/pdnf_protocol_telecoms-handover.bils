(* IS-95 CDMA vertical handoff:
   https://jwcn-eurasipjournals.springeropen.com/articles/10.1155/2008/136939 *)

fun measure_velocity -> 

(* predefined threshold for handoff *)
let XWLAN = 10 in

(* current base transceiver station (BTS): 1=CDMA or 2=WLAN *)
ref station_id = 1 in

(* received signal strength to WLAN (BTS2) *)
ref RSS_bts2 = 5 in

(* Handoff functions *)
let handoff_to_WLAN () = station_id := 2 in
let handoff_to_CDMA () = station_id := 1 in

(* Vertical Handoff Triggering with RSS *)
(* from CDMA to WLAN *)
let cdma_to_wlan () =
  if !RSS_bts2 > XWLAN then (handoff_to_WLAN ())
in

(* from WLAN to CDMA *)
let wlan_to_cdma () =
  if (!RSS_bts2 < XWLAN) then (handoff_to_CDMA ())
in

let try_trigger_handoff () =
  if !station_id = 1 then cdma_to_wlan ();
  if !station_id = 2 then wlan_to_cdma ();
  !station_id
in

(* move towards or away from WLAN *)
ref moving_towards_wlan = true in
let max_RSS = 12 in
let move () =
  measure_velocity (); 
  (if !moving_towards_wlan
   then (if !RSS_bts2 < max_RSS then RSS_bts2 := !RSS_bts2 + 1)
   else (if !RSS_bts2 > 0 then RSS_bts2 := !RSS_bts2 - 1));
  (if !RSS_bts2 > max_RSS then moving_towards_wlan := false);
  (if !RSS_bts2 < 0  then moving_towards_wlan := true);
  try_trigger_handoff ()
in
move

|||_(unit->unit)->unit->int

fun g -> 

let a = 10 in
ref r1 = 5 in
ref r2 = true in
let b = 12 in
let f () =
  g (); 
  (if !r2
   then (if !r1 < b then r1 := !r1 + 1)
   else (if !r1 > 0 then r1 := !r1 - 1));
  (if !r1 > b then r2 := false);
  (if !r1 < 0 then r2 := true);
  let id = if !r1 > a then 2 else
           if !r1 == a && !r2 then 1 else
           if !r1 == a && not(!r2) then 2 else 1 in
  id
in
f